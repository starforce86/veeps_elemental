# Generated by Django 4.1 on 2022-10-24 21:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import netfields.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Channel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("submitted_on", models.DateTimeField(blank=True, null=True)),
                ("stack_id", models.CharField(max_length=256, null=True)),
                ("name", models.CharField(blank=True, max_length=256)),
                ("description", models.TextField(blank=True)),
                ("state", models.CharField(choices=[("on", "On"), ("off", "Off")], default="off", max_length=5)),
                ("current_video_input", models.IntegerField(null=True)),
                ("current_audio_input", models.IntegerField(null=True)),
                ("preview", models.URLField(null=True)),
                ("endpoint_url", models.URLField(default=None, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Distribution",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("submitted_on", models.DateTimeField(blank=True, null=True)),
                ("stack_id", models.CharField(max_length=256, null=True)),
                ("name", models.CharField(max_length=256)),
                ("description", models.TextField()),
                ("hls_url", models.CharField(max_length=256)),
                ("price_class", models.CharField(default="", max_length=256)),
                ("mediapackage_id", models.UUIDField(null=True)),
                ("cloudfront_id", models.CharField(blank=True, max_length=256, null=True)),
                ("cloudformation_template", models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                ("live_date", models.DateTimeField(null=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Playout",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                ("resolution", models.CharField(max_length=20)),
                ("status", models.CharField(max_length=20)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("channel_mp_channel_id", models.UUIDField(default=uuid.uuid4)),
                ("channel_origin_endpoint_id", models.UUIDField(default=uuid.uuid4)),
                ("channel_origin_id", models.UUIDField(default=uuid.uuid4)),
                (
                    "channel",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="playout",
                        to="api.channel",
                    ),
                ),
                (
                    "distribution",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="playout",
                        to="api.distribution",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Input",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("submitted_on", models.DateTimeField(blank=True, null=True)),
                (
                    "name",
                    models.CharField(
                        max_length=128,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[0-9a-zA-Z]*$", "Only alphanumeric characters are allowed."
                            )
                        ],
                    ),
                ),
                (
                    "inbound_ip",
                    netfields.fields.InetAddressField(
                        help_text="Generated - This is the ip the camera will send data to", max_length=39, null=True
                    ),
                ),
                ("state", models.CharField(choices=[("on", "On"), ("off", "Off")], default="off", max_length=5)),
                ("initial_input", models.BooleanField(default=False)),
                (
                    "protocol",
                    models.CharField(
                        choices=[
                            ("rtp", "rtp"),
                            ("rtp-fec", "rtp-fec"),
                            ("srt-listener", "srt-listener"),
                            ("zixi-pull", "zixi-pull"),
                            ("zixi-push", "zixi-push"),
                            ("rist", "rist"),
                            ("st2110-jpegxs", "st2110-jpegxs"),
                            ("cdi", "cdi"),
                            ("fujitsu-qos", "fujitsu-qos"),
                        ],
                        help_text="Which type of streaming protocol (SRT, RTP, ZIXI)",
                        max_length=16,
                    ),
                ),
                (
                    "port",
                    models.IntegerField(help_text="If no port specified, the Default port for protocol will be used"),
                ),
                ("encryption", models.BooleanField(default=False, help_text="Enable/disable encryption")),
                (
                    "whitelist_cidr",
                    netfields.fields.CidrAddressField(
                        default="0.0.0.0/0",
                        help_text="Whitelist the IP of the camera, all 0s is wide open",
                        max_length=43,
                    ),
                ),
                (
                    "zixi_stream_id",
                    models.CharField(
                        help_text="If protocol is zixi, this 'stream id' must match the 'stream id' on the device",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "encryption_password",
                    models.CharField(
                        help_text="Optional - Encryption settings if enabled",
                        max_length=128,
                        null=True,
                        validators=[django.core.validators.MinLengthValidator(4)],
                    ),
                ),
                ("stack_id", models.CharField(max_length=256, null=True)),
                (
                    "playout",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="input", to="api.playout"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Clip",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("status", models.CharField(max_length=50)),
                ("asset_id", models.UUIDField(null=True)),
                ("vod_url", models.CharField(max_length=255)),
                (
                    "distribution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="clips",
                        to="api.distribution",
                    ),
                ),
                (
                    "playout",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="clips", to="api.playout"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="channel",
            name="schedule",
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.schedule"),
        ),
        migrations.CreateModel(
            name="Action",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "action_type",
                    models.CharField(choices=[("input switch", "Input Switch")], default="input switch", max_length=50),
                ),
                (
                    "start_type",
                    models.CharField(
                        choices=[("fixed", "Fixed"), ("immediate", "Immediate"), ("follow", "Follow")], max_length=50
                    ),
                ),
                (
                    "follow_point",
                    models.CharField(choices=[("start", "Start"), ("end", "End")], max_length=50, null=True),
                ),
                ("fixed_start_time", models.DateTimeField(null=True)),
                (
                    "follow_ref_action",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.action"),
                ),
                (
                    "input_attachment",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.input"),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="actions", to="api.schedule"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
